<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgsAAAILCAYAAABmX9/OAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAy
        vQAAMr0BBUlDfwAAHPlJREFUeF7t3EeSZMeZhVEuA4MecklYAFtRgLI1d4ACI824BC6NrakJagxq0P1H
        IRzIShniCXe/55hdA1giMzLee54fq9j9lXQ/+tGPPjj9KwA84vtEuE8++eTDugk+O/7z9EMA8AXfJ8LV
        xf9a7ae1/6t9WjfCD04/BQDHUPhmfX/42en7xM+O//n0UySoi34/FNoEAwDvPAiFNsGQoi72U6HQJhgA
        wh0Oh2/U94OHodAmGGZXF/mlUGgTDAChXgmFNsEwq7q454RCm2AACHNmKLQJhtnURb0kFNoEA0CIC0Oh
        TTDMoi7mNaHQJhgAJndlKLQJhtHVRbwlFNoEA8CkbgyFNsEwqrp4S4RCm2AAmMxCodAmGEZTF23JUGgT
        DACTWDgU2gTDKOpirREKbYIBYHArhUKbYOhdXaQ1Q6FNMAAMauVQaBMMvaqLs0UotAkGgMFsFAptgqE3
        dVG2DIU2wQAwiI1DoU0w9KIuxh6h0CYYADq3Uyi0CYa91UXYMxTaBANAp46hUPvfJ87uLScY9lJvfg+h
        0CYYADrTSSi0CYat1ZveUyi0CQaATnQWCm2CYSv1ZvcYCm2CAWBnnYZCm2BYW73JPYdCm2AA2EnnodAm
        GNZSb+4IodAmGAA2NkgotAmGpdWbOlIotAkGgI0MFgptgmEp9WaOGAptggFgZYOGQptguFW9iSOHQptg
        AFjJ4KHQJhiuVW/eDKHQJhgAFjZJKLQJhkvVmzZTKLQJBoCFTBYKbYLhXPVmzRgKbYIB4EZv3rz5Rp2l
        s4VCm2B4Tb1JM4dCm2AAuFKdoV+fOBTaBMNz6s1JCIU2wQBwoTo7E0KhTTA8VG9KUii0CQaAM9WZmRQK
        bYKhqTcjMRTaBAPAK+qsTAyFNsFQb0JyKLQJBoBn1BmZHAptucFQX7xQ+HKCAeCBOhuFwpfLC4b6ooXC
        4wkGgJM6E4XC4+UEQ32xQuH5CQYgXp2FQuH5zR8M9UUKhdcnGIBYdQYKhdc3bzDUFycUzp9gAOLU2ScU
        zt98wVBflFC4fIIBiFFnnlC4fPMEQ30xQuH6CQZgenXWCYXrN34w1BchFG6fYACmVWecULh94wZDvXih
        sNwEAzCdOtu+Xvufe2edXb/xgqFetFBYfoIBmEadaUJh+Y0TDPVihcJ6EwzA8OosEwrrrf9gqBcpFNaf
        YACGVWeYUFh//QZDvTihsN0EAzCcOruEwnbrLxjqRQmF7ScYgGHUmSUUtl8/wVAvRijsN8EAdK/OKqGw
        3/YPhnoRQmH/CQagW3VGCYX9t18w1CcXCv1MMADdqbNJKPSz7YOhPqlQ6G+CAehGnUlCob9tFwz1yYRC
        vxMMwO7qLBIK/W79YKhPIhT6n2AAdlNnkFDof+sFQ31woTDOBAOwucPh8Pd1/giFMbZ8MNQHFQrjTTAA
        mxEKQ265YKgPJhTGnWAAVicUht7twVAfRCiMP8EArEYoTLHrg6F+s1CYZ4IBWJxQmGqXB0P9JqEw3wQD
        sBihMOXOD4b6xUJh3gkG4GZCYeq9Hgz1i4TC/BMMwNWEQsSeD4b6SaGQM8EAXEwoRO1xMNQPCoW8CQbg
        bEIhcl8GQ/3LX9UPfPbgF1jG3tb1//DdjQDwjOM5cTwvHpwflrG3H3/88VfbjfCD+oFPH/wCy5g/YQCe
        5U8Uonf8g4Qfnm6FzwmG6AkG4BGhEL3P6vr/2+lWeF/95PdrgiFzggH4wjEUav/9xFlh8+/5UGjqFwmG
        3AkGQChk7/VQaOoXC4bcCQYIJhSid34oNPWbBEPuBAMEEgrRuzwUmvrNgiF3ggGCCIXoXR8KTX0QwZA7
        wQABhEL0bg+Fpj6YYMidYICJCYXc1dn+WW2ZUGjqAwuG3AkGmJBQyN0qodDUJxAMuRMMMJE3b94c/x8u
        CYXArRoKTX0iwZA7wQATEAq52yQUmvqEgiF3ggEGJhRyt2koNPWJj8Hw2/svxGImGGBAQiF6f9k8FJr6
        5IIhd4IBBlLP7N/VhELm9guFpl6EYMidYIAB1LMqFHK3fyg09WIEQ+4EA3SsnlGhkLt+QqGpFyUYcicY
        oEP1bAqF3PUXCk29OMGQO8EAHalnUijkrt9QaOpFCobcCQboQD2LQiF3/YdCUy9WMOROMMCO6hkUCrkb
        JxSaetGCIXeCAXZQz55QyN14odDUixcMuRMMsKF65oRC7sYNhaa+CMGQO8EAG6hnTSjkbvxQaOqLEQy5
        EwywonrGhELu5gmF5nA4fK++MMGQOcEAK6hnSyjk7i+1fz3dCnMRDNETDLCgeqaOofBf954xy9m8odAI
        hugJBlhAPUtCIXfzh0IjGKInGOAG9QwJhdzlhEIjGKInGOAK9ewIhdzlhUIjGKInGOAC9cwIhdzlhkIj
        GKInGOAM9awIhdwJhUYwRE8wwAvqGREKuRMKDwmG6AkGeEI9G0Ihd0LhOYIheoIB7qlnQijkTii8RjBE
        TzBAqWdBKOROKJxLMERPMBCtngGhkDuhcKljMNR+8+CNtIwJBiLVvS8UcvfnmlC4hmCInmAgSp11f1v3
        vVDInFC4VX3DOP6VhGDInGAgglCInlBYimCInmBgakIhekJhaYIheoKBKQmF6AmFtQiG6AkGpiIUoicU
        1iYYoicYmIJQiJ5Q2IpgiJ5gYGhCIXpCYWuCIXqCgSEJhegJhb0IhugJBoYiFKInFPYmGKInGBiCUIie
        UOiFYIieYKBrQiF6QqE3dUG+WxMMmRMMdEkoRO/Pdf3/5XQr0JO6OIIhd4KBrhxDofafT9yrNv+EQu/q
        IgmG3AkGuiAUoicURlEXSzDkTjCwK6GQuzp7/lwTCiOpCycYcicY2IVQyJ1QGFhdQMGQO8HApup+O/6P
        GYVC4ITCBOpCCobcCQY2IRRyJxQmUhdUMOROMLAqoZA7oTChurCCIXeCgVUIhdwJhYnVBRYMuRMMLEoo
        5E4oBKgLLRhyJxhYhFDInVAIUhdcMOROMHAToZA7oRCoLvwxGH59/0awmAkGriIUovcnoRCqLr5gyJ1g
        4CJ1z/xNTShkTiikq5tAMOROMHCWuleEQu6EAp+rm0Ew5E4w8KK6R4RC7oQC76ubQjDkTjDwpLo3hELu
        hAJPq5tDMOROMPCeuieEQu6EAi+rm0Qw5E4w8E7dC0Ihd0KB89TNIhhyJxjC1T0gFHInFLhM3TSCIXeC
        IVRde6GQO6HAdermEQy5Ewxh6poLhdwJBW5TN5FgyJ1gCFHXWijkTiiwjLqZBEPuBMPk6hoLhdwJBZZ1
        OBy+UzeWYMicYJhUXVuhkLs/1f75dCvAcgRD9ATDZOqaHkPhP+5dY8uZUGBdgiF6gmESdS2FQu6EAtsQ
        DNETDIOraygUcicU2JZgiJ5gGFRdO6GQO6HAPgRD9ATDYOqaCYXcCQX2JRiiJxgGUddKKOROKNAHwRA9
        wdC5ukZCIXdCgb4IhugJhk7VtREKuRMK9EkwRE8wdKauiVDInVCgb/UN4zs1wZA5wdCJuhZCIXdCgTEI
        hugJhp3VNRAKoTscDn+sfwoFxnEMhrppf3X/RraYCYad1HsvFEInFBiWYIieYNhYfbP463rfhULghALD
        EwzREwwbEQq5EwpMQzBETzCsTCjkTigwHcEQPcGwEqGQO6HAtARD9ATDwoRC7oQC0xMM0RMMCxEKuRMK
        xBAM0RMMNxIKuRMKxBEM0RMMVxIKuRMKxBIM0RMMFxIKuRMKxBMM0RMMZxIKuRMKcCIYoicYXiEUclfP
        xh/v7u7+6XQrAPVgfLsmGDInGJ4hFHJ3DIWaUICH6gERDLkTDA/U+3EMhX9/8D5ZwIQCvKIeFMGQO8Fw
        IhRyJxTgTPXACIbcxQeDUMidUIAL1YMjGHIXGwxCIXdCAa5UD5BgyF1cMAiF3AkFuFE9SIIhdzHBIBRy
        JxRgIfVACYbcTR8MQiF3QgEWVg+WYMjdtMEgFHInFGAl9YAJhtxNFwxCIXdCAVZWD5pgyN00wSAUcicU
        YCP1wAmG3A0fDEIhen8QCrCheuiOwfDLew+h5WzYYBAK0RMKsId6+ARD7oYLhnrNX6sJhcwJBdhTPYSC
        IXfDBEO9VqGQO6EAPaiHUTDkrvtgqNcoFHInFKAn9VAKhtx1Gwz12oRC7oQC9KgeTsGQu+6CoV6TUMid
        UICe1UMqGHLXTTDUaxEKuRMKMIJ6WAVD7nYPhnoNQiF3QgFGUg+tYMjdbsFQn1so5E4owIjq4RUMuds8
        GOpzCoXcCQUYWT3EgiF3mwVDfS6hkDuhADOoh1kw5G71YKjPIRRy94fD4fCPp1sBGN3d3d1H9WALhsyt
        Fgz1sYVC7oQCzEgwRG/xYKiPeQyFn977HJYzoQAzEwzRWywY6mMJhdwJBUggGKJ3czDUxxAKuRMKkEQw
        RO/qYKjfKxRyJxQgkWCI3sXBUL9HKOROKECy+obxUU0wZO7sYKhfKxRyJxQAwRC+V4Ohfo1QyJ1QAL4k
        GKL3bDDUzwmF3AkF4DHBEL1HwVA/JhRyJxSA59U3jA/roHj74OCwjL09Xn/3gT0MR4BHfKOI3tv6b5Q/
        Pv7zwY9byIQCcLY6MPyVhFnW/NUDcDnBYJaxioTfCwXgasdgqMPkFw8PFzObY0IBWIRgMJtzQgFYlGAw
        m2tCAViFYDCbY0IBWJVgMBt7QgHYhGAwG3NCAdiUYDAba0IB2IVgMBtjQgHYlWAw636/f/PmjVAA9iUY
        zLqdUAD6IRjMuptQAPojGMy6mVAA+iUYzHbf72v/cHokAfpUB9W3aoLBbPsJBWAcdWAJBrNtJxSA8dTB
        JRjMtplQAMZVB5hgMFt3QgEYXx1kgsFsnQkFYB51oAkGs2UnFID51MEmGMyWmVAA5lUHnGAwu21CAZhf
        HXSCwey6CQUgRx14gsHssgkFIE8dfILB7LwJBSBXHYCCwezlCQWAOgiPwfDz08FoZl/udzWhAHBUB6Jg
        MHt/QgHgoToYBYPZ5xMKAM+pA1IwWPqEAsBr6qAUDJY6oQBwrjowBYOlTSgAXKoOTsFgKRMKANeqA1Qw
        2OwTCgC3qoNUMNisEwoAS6kDVTDYbBMKAEurg1Uw2CwTCgBrqQNWMNjoEwoAa6uDVjDYqPvd4XD4welW
        BmBNd3d336yDVzDYSBMKAFsTDDbQhALAXgSDDTChALC3Tz755Js1wWA9TigA9EIwWIcTCgC9EQzW0YQC
        QK8Eg3UwoQDQO8FgO04oAIxCMNgOEwoAoxEMtuGEAsCoBINtMKEAMDrBYCtOKADMQjDY0qtI+FQoAEzm
        GAx1yP/s4aFvdumEAsDEBIPdOqEAEEAw2LUTCgBBBINdOqEAEEgw2AX7tO4XoQCQSDDYGRMKAOkEg70w
        oQDA5wSDPTGhAMD7BIPdm1AA4GmCwWpCAYCXHQ6HHz/xDcRy9pPTrQAAj/mTBav5kwUAniYU7N4EAwDv
        Ewr2xAQDAJ8TCvbCBANAOqFgZ0wwAKQSCnbBBANAGqFgV0wwAKQQCnbDBAPA7ISCLTDBADAroWALTjAA
        zEYo2AoTDACzEAq24gQDwOiEgm0wwQAwKqFgG04wAIxGKNgOEwwAoxAKtuMEA0DvhIJ1MMEA0CuhYB1N
        MAD0RihYhxMMAL0QCtbxBAPA3oSCDTDBALAXoWADTTAAbE0o2IATDABbEQo28AQDwNqEgk0wwQCwFqFg
        E00wACxNKNiEEwwASxEKNvEEA8CthIIFTDAAXEsoWNAEA8ClhIIFTjAAnEsoWPAEA8BrhIKZYAB4llAw
        +2KCAeAhoWD2aIIBoBEKZs9OMAAIBbNXJxiAXELB7OwJBiCPUDC7eIIByCEUzK6eYADmJxTMbp5gAOYl
        FMwWm2AA5iMUzBafYADmIRTMVptgAMYnFMxWn2AAxiUUzDabYADGIxTMNp9gAMYhFMx2m2AA+icUzHaf
        YAD6JRTMuplgAPojFMy6m2AA+iEUzLqdYAD2JxTMup9gAPYjFMyGmWAAticUzIabYAC2IxTMhp1gANYn
        FMyGn2AA1iMUzKaZYACWJxTMpptgAJYjFMymnWAAbicUzKafYACuJxTMYiYYgMsJBbO4CQbgfHVgfFgH
        x9sHB4nl7Cc11z9zb4/P/+koAHiaUMhe+2+W7oPoCQbgeXVA+KuH3H1W++HpVnjH/RA9fyUBPOYbQ/Qe
        hULjvoieYAC+5BtC9J4Nhcb9ET3BAPhGEL5XQ6Fxn0RPMEAy3wCid3YoNO6X6AkGSOTgj97FodC4b6In
        GCCJAz96V4dC4/6JnmCABA766N0cCo37KHqCAWbmgI/eYqHQuJ+iJxhgRg726C0eCo37KnqCAWbiQI/e
        aqHQHO+v2s8ffF7LmGCAGQiF6K0eCo1giJ5ggJEJhehtFgqNYIieYIARCYXobR4KjWCInmCAkQiF6O0W
        Co1giJ5ggBEIhejtHgqNYIieYICeCYXodRMKjWCInmCAHgmF6HUXCo1giJ5ggJ4Iheh1GwqNYIieYIAe
        CIXodR8Kzd3d3fE+FQyZEwywJ6EQvWFCoREM0RMMsAehEL3hQqERDNETDLAloRC9YUOhqdf/rZpgyJxg
        gC0IhegNHwpNfR2CIXeCAdYkFKI3TSg09fUIhtwJBliDUIjedKHQ1NclGHInGGBJQiF604ZCU1+fYMid
        YIAlCIXoTR8KTX2dgiF3ggFuIRSiFxMKTX29giF3ggGuIRSiFxcKTX3dgiF3ggEuIRSiFxsKTX39giF3
        ggHOIRSiFx8KTb0PgiF3ggFeIhSiJxQeqPdDMOROMMBThEL0hMIz6n0RDLkTDHCfUIieUHhFvT/HYPjF
        6f2yrAkGOBIK0RMKZ6r3STDkTjCQTShETyhcqN4vwZA7wUAmoRA9oXClet8EQ+4EA1mEQvSEwo3q/RMM
        uRMMZBAK0RMKC6n3UTDkTjAwN6EQPaGwsHo/BUPuBANzEgrREworqfdVMOROMDAXoRA9obCyen8FQ+4E
        A3MQCtETChup91kw5E4wMDahED2hsLF6vwVD7gQDYxIK0RMKO6n3XTDkTjAwFqEQPaGws3r+PqprIBgy
        JxgYg1CInlDohGCInmCgb0IhekKhM4IheoKBPgmF6AmFTgmG6AkG+iIUoicUOicYoicY6INQiJ5QGIRg
        iJ5gYF9CIXpCYTCCIXqCgX0IhegJhUEJhugJBrYlFKInFAYnGKInGNiGUIieUJiEYIieYGBdQiF6QmEy
        giF6goF1CIXoCYVJCYboCQaWJRSiJxQmdwyG2i8fXHfLmGBgGUIhekIhhGCInmDgNkIhekIhjGCInmDg
        OkIhekIhlGCInmDgMkIhekIhnGCInmDgPEIhekKBdwRD9AQDLxMK0RMKvOfu7u74f1YpGDInGHiaUIie
        UOBJgiF6goH3CYXoCQVeJBiiJxj4nFCInlDgLIIheoIhnVCInlDgIoIheoIhlVCInlDgKoIheoIhjVCI
        nlDgJnX/fLsmGDInGFIIhegJBRZR95FgyJ1gmJ1QiJ5QYFF1PwmG3AmGWQmF6AkFVlH3lWDInWCYjVCI
        nlBgVXV/CYbcCYZZCIXoCQU2UfeZYMidYBidUIieUGBTdb8JhtwJhlEJhegJBXZR951gyJ1gGI1QiJ5Q
        YFd1/wmG3AmGUQiF6AkFulD3oWDInWDonVCInlCgK3U/CobcCYZeCYXoCQW6VPelYMidYOiNUIieUKBr
        dX8eg+FXp/vVsiYYeiEUoicUGELdp4Ihd4Jhb0IhekKBodT9KhhyJxj2IhSiJxQYUt23giF3gmFrQiF6
        QoGh1f0rGHInGLYiFKInFJhC3ceCIXeCYW1CIXpCganU/SwYcicY1iIUoicUmFLd14Ihd4JhaUIhekKB
        qdX9LRhyJxiWIhSiJxSIUPe5YMidYLiVUIieUCBK3e+CIXeC4VpCIXpCgUh17n2n7n3BkDnBcCmhED2h
        QDTBED3BcC6hED2hAEUwRE8wvEYoRE8owD2CIXqC4TlCIXpCAZ4gGKInGB4SCtETCvACwRA9wdAIhegJ
        BTiDYIieYBAK0RMKcAHBEL3cYBAK0RMKcAXBEL28YBAK0RMKcAPBEL2cYBAK0RMKsADBEL35g0EoRE8o
        wIIEQ/TmDQahED2hACsQDNGbLxiEQvSEAqzoGAy1Xz947ixj8wSDUIieUIANCIbojR8MQiF6QgE2dDgc
        jn8lIRgyN24wCIXoCQXYgWCI3njBIBSiJxRgR4IheuMEg1CInlCADgiG6PUfDEIhekIBOiIYotdvMAiF
        6AkF6JBgiF5/wSAUoicUoGOCIXr9BINQiJ5QgAEIhujtHwxCIXpCAQYiGKK3XzAIhegJBRhQPbffrQmG
        zG0fDEIhekIBBlbPr2DI3XbBIBSiJxRgAvUcC4bcrR8MQiF6QgEmUs+zYMjdesEgFKInFGBC9VwLhtwt
        HwxCIXpCASZWz7dgyN1ywSAUoicUIEA954Ihd7cHg1CInlCAIPW8C4bcXR8MQiF6QgEC1XMvGHJ3eTAI
        hegJBQhWz79gyN35wSAUoicUAMGQvdeDQShETygAX6jzQDDk7vlgEArREwrAI3UuHIPhN6dzwrL2OBiE
        QvSEAvCsOh8EQ+6+DIb6Dx/Ujt8wnvqFNvme/aMmgJM6Jz6s8+Ltw/PDInbsgw/ajeBPFvLmTxSAs9V5
        4U8Y8uavIsInFICL1bkhGHLmf+QYPqEAXK3OD8Ew/54PhUYwTD2hANyszhHBMO9eD4VGMEw5oQAsps4T
        wTDfzg+FRjBMNaEALK7OFcEwzy4PhUYwTDGhAKymzhfBMP6uD4VGMAw9oQCsrs4ZwTDubg+FRjAMOaEA
        bKbOG8Ew3pYLhUYwDDWhAGyuzh3BMM6WD4VGMAwxoQDsps4fwdD/1guFRjB0PaEA7K6+T3yvziLB0OfW
        D4VGMHQ5oQB0QzB0ue1CoREMXU0oAN0RDF1t+1BoBEMXEwpAtwRDF9svFBrBsOuEAtA9wbDr9g+FRjDs
        MqEADEMw7LJ+QqERDJtOKADDEQybrr9QaATDJhMKwLAEwybrNxQawbDqhAIwPMGw6voPhUYwrDKhAExD
        MKyycUKhEQyLTigA0xEMi268UGgEwyITCsC0DofD92qC4baNGwqNYLhpQgGY3jEY6qz77b2zz87f+KHQ
        CIarJhSAGILhqs0TCo1guGhCAYgjGC7afKHQCIazJhSAWILhrM0bCo1geHFCAYgnGF7c/KHQCIYnJxQA
        TgTDk8sJhUYwvDehAPCAYHhveaHQCIZ3EwoAzxAM75YbCk14MAgFgFeEB4NQaEKDQSgAnCk0GITCQ2HB
        IBQALhQWDELhOSHBIBQArhQSDELhNZMHg1AAuNHkwSAUzjVpMAgFgIXUefr92mzBIBQuNVkwCAWAhdW5
        OlMwCIVrTRIMQgFgJXW+zhAMQuFWgweDUABYWZ2zIweDUFjKoMEgFAA2UuftiMEgFJY2WDAIBYCN1bk7
        UjAIhbUMEgxCAWAndf6OEAxCYW2dB4NQANhZncM9B4NQ2EqnwSAUADpR53GPwSAUttZZMAgFgM7UudxT
        MAiFvXQSDEIBoFN1PvcQDEJhbzsHg1AA6Fyd03sGg1DoxU7BIBQABlHn9TEYPj2d31tNKPRm42AQCgCD
        qXN7y2AQCr3aKBiEAsCg6vzeIhiEQu9WDgahADC4OsfXDAahMIqVgkEoAEyizvM1gkEojGbhYBAKAJOp
        c33JYBAKo1ooGIQCwKTqfF8iGITC6G4MBqEAMLk6528JBqEwiyuDQSgAhKjz/ppgEAqzuTAYhAJAmDr3
        LwkGoTCrM4NBKACEqvP/nGAQCrN7JRiEAkC4+j7wUjAIhRTPBINQAOCd+n7wVDAIhTQPgkEoAPCeYxgc
        A+H0fUIopKoL/2HdAG/dAAA85fR94rPjP08/RKKPP/74q6d/BYBHKhY+OP1rqK985f8BP+A4+zPA5rEA
        AAAASUVORK5CYII=
</value>
  </data>
</root>